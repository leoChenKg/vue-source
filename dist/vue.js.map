{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["// 重写数组部分方法\r\nlet oldArrayProto = Array.prototype\r\n\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n\r\n// 这7 个方法可以改变原来的数组\r\nlet methods = ['push', 'pop', 'shift', 'unshift', 'splice', 'reverse', 'sort']\r\n\r\nmethods.forEach(m => {\r\n  // 函数劫持 切片编程\r\n  newArrayProto[m] = function (...args) {\r\n    let result = oldArrayProto[m].apply(this, args)\r\n    let insertedArr\r\n    let ob = this.__ob__\r\n\r\n    switch (m) {\r\n      case 'push':\r\n      case 'unsift':\r\n        insertedArr = args\r\n        break\r\n      case 'splice':\r\n        insertedArr = args.slice(2)\r\n        break\r\n    }\r\n\r\n    if (insertedArr) {\r\n      ob.observeArray(insertedArr)\r\n      console.log('数组改变，视图更新')\r\n    }\r\n    return result\r\n  }\r\n})\r\n","import { newArrayProto } from './array'\r\nclass Observer {\r\n  constructor(data) {\r\n    // 给数据加了一个标识，表示被劫持过了，并搞成不可枚举的，防止 walk  执行时死循环\r\n    Object.defineProperty(data, '__ob__', { enumerable: false, value: this })\r\n    if (Array.isArray(data)) {\r\n      // 如果数据是数组\r\n      this.observeArray(data)\r\n      // 处理数组的劫持问题，重写部分方法\r\n      Object.setPrototypeOf(data, newArrayProto)\r\n    } else {\r\n      // Object.defineProperty 只能劫持对象中已经存在的属性\r\n      this.walk(data)\r\n    }\r\n  }\r\n\r\n  // 循环对象，对属性依次劫持\r\n  walk(data) {\r\n    Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n  }\r\n\r\n  observeArray(data) {\r\n    // 递归劫持数组中的项，只劫持对象，数组单独处理\r\n    data.forEach(item => observe(item))\r\n  }\r\n}\r\n\r\n// 数据劫持功能的函数\r\nexport function defineReactive(target, key, value) {\r\n  // 如果当前值是对象则 继续递归劫持其属性\r\n  observe(value)\r\n  // 劫持数据\r\n  Object.defineProperty(target, key, {\r\n    get() {\r\n      console.log('获取值')\r\n      return value\r\n    },\r\n    set(newVal) {\r\n      if (newVal === value) return\r\n      console.log('数据改变了，去更新页面！')\r\n      observe(newVal)\r\n      value = newVal\r\n    }\r\n  })\r\n}\r\n\r\nexport default function observe(data) {\r\n  // 数据劫持\r\n\r\n  if (typeof data !== 'object' || data == null) {\r\n    return // 不是对象并进行数据劫持\r\n  }\r\n\r\n  // 一个对象只需要劫持一次，判断对象是否被劫持过，可以添加一个实例，用实例来判断是否被劫持过\r\n  if (data.__ob__ instanceof Observer) {\r\n    // 数据已经被代理过了\r\n    return data.__ob__\r\n  }\r\n  return new Observer(data)\r\n}\r\n","import observe from './observe/index'\r\nexport  function initState(vm) {\r\n  const opts = vm.$options\r\n  if (opts.data) {\r\n    initData(vm)\r\n  }\r\n}\r\n// 处理 options 上的 data\r\nfunction initData(vm) {\r\n  let data = vm.$options.data // data 可能是函数也可能是对象\r\n  data = typeof data === 'function' ? data.call(this) : data\r\n\r\n  // 在 Vue 实实力上加入 _data 属性其值就是 data\r\n  vm._data = data\r\n  // 把 vm._data.xxx  代理成 vm.xxx\r\n  proxy(vm, vm._data)\r\n  // 劫持数据\r\n  observe(data)\r\n}\r\n\r\n// 把 vm._data.xxx  代理成 vm.xxx\r\nfunction proxy(from, target) {\r\n  Object.keys(target).forEach(key => {\r\n    Object.defineProperty(from, key, {\r\n      get() {\r\n        return target[key]\r\n      },\r\n      set(newVal) {\r\n        target[key] = newVal\r\n      }\r\n    })\r\n  })\r\n}\r\n","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\n\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) // 匹配标签名称\r\n\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) // 匹配结束标签名 </xxxx>\r\n\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/ // 匹配属性的 匹配到的是 分组一key 分组二= 分组三属性值\r\nconst startTagClose = /^\\s*(\\/?)>/ // 标签开是的结束部分\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g // {{ xxx }} 匹配到的就是表达式变量\r\n\r\n// 对模板进行编译处理\r\nexport function parseHTML(html) {\r\n  const ELEMENT_TYPE = 1\r\n  const TEXT_TYPE = 3\r\n  const stack = []\r\n  let currentParent // 指向栈的最后一个\r\n  let root // ast 的根\r\n\r\n  while (html) {\r\n    // debugger\r\n    // 如果 textEnd 是0 那么开始位置为标签，如果不为 0 那么开始位置为标签内容\r\n    let textEnd = html.indexOf('<') // <tag>    text <tag>    </ xxx>\r\n    // 开始标签的匹配结果\r\n    if (textEnd === 0) {\r\n      const startTagMatch = parseStartTag()\r\n      if (startTagMatch) {\r\n        start(startTagMatch.tagName, startTagMatch.attrs)\r\n        continue\r\n      }\r\n\r\n      // 如果不是开始标签，就是结束标签\r\n      let endTagMatch = html.match(endTag)\r\n      if (endTagMatch) {\r\n        advance(endTagMatch[0].length)\r\n        end(endTagMatch[1]) // 传入结束标签名\r\n        continue\r\n      }\r\n    }\r\n\r\n    // 匹配内容标签内的\r\n    if (textEnd >= 0) {\r\n      // 截取标签内的内容\r\n      let text = html.substring(0, textEnd)\r\n      // 如果有text就截取掉\r\n      if (text) {\r\n        advance(text.length)\r\n        chars(text)\r\n        continue\r\n      }\r\n    }\r\n  }\r\n  // 匹配开始标签的名称\r\n  function parseStartTag() {\r\n    let start = html.match(startTagOpen)\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1], // 标签名称\r\n        attrs: [] // 标签属性\r\n      }\r\n      advance(start[0].length)\r\n\r\n      let attr, end\r\n      // 循环匹配标签的属性，在遇到 > 或者 /> 时停止匹配\r\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n        advance(attr[0].length)\r\n        match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\r\n      }\r\n\r\n      // 匹配到开始标签结束符\r\n      if (end) {\r\n        advance(end[0].length)\r\n      }\r\n      return match\r\n    }\r\n    return false // 不是开始标签\r\n  }\r\n  // 截取 html\r\n  function advance(n) {\r\n    html = html.substring(n)\r\n  }\r\n\r\n  function createASTElement(tag, attrs) {\r\n    return {\r\n      tag,\r\n      type: ELEMENT_TYPE,\r\n      children: [],\r\n      attrs,\r\n      parent: null\r\n    }\r\n  }\r\n  function start(tagName, attrs) {\r\n    let node = createASTElement(tagName, attrs)\r\n    if (!root) {\r\n      root = node\r\n    } else {\r\n      currentParent.children.push(node)\r\n      node.parent = currentParent\r\n    }\r\n    stack.push(node)\r\n    currentParent = node\r\n  }\r\n  function chars(text) {\r\n    if (text.trim() === '') return\r\n    currentParent.children.push({\r\n      type: TEXT_TYPE,\r\n      text,\r\n      parent: currentParent\r\n    })\r\n  }\r\n  function end(tag) {\r\n    stack.pop()\r\n    currentParent = stack[stack.length - 1]\r\n  }\r\n\r\n  return root\r\n}\r\n","import { parseHTML } from './parse'\r\n\r\nfunction genProps(attrs) {\r\n  let str = ''\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    let attr = attrs[i]\r\n    if (attr.value === undefined) attr.value = true\r\n    if (attr.name === 'style') {\r\n      let obj = {}\r\n      attr.value.split(';').forEach(i => {\r\n        if (!i) return\r\n        let [key, value] = i.split(':')\r\n        obj[key.trim()] = value.trim()\r\n      })\r\n      attr.value = obj\r\n    }\r\n    str += `${attr.name}:${JSON.stringify(attr.value)}, `\r\n  }\r\n\r\n  return `{${str.slice(0, -2)}}`\r\n}\r\nfunction genChildren(children) {\r\n  return children.reduce((a, c) => `${a}${codegen(c)},`, '').slice(0, -1)\r\n}\r\nfunction codegen(ast) {\r\n  if (ast.type === 3) {\r\n    // 文本情况  把 {{age}} ==> _s(age)     把 {{name}} hello ==> _v(_s(name)+ \" hello\")\r\n    // 把 xxx ==> _v(\"xxx\")\r\n    ast.text = ast.text.replaceAll(/\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g, (...args) => `\" + _s(${args[1]}) + \"`)\r\n    if (ast.text.startsWith('\" +')) {\r\n      ast.text = ast.text.slice(3)\r\n    } else {\r\n      ast.text = '\"' + ast.text\r\n    }\r\n    if (ast.text.endsWith('+ \"')) {\r\n      ast.text = ast.text.slice(0, -3)\r\n    } else {\r\n      ast.text += '\"'\r\n    }\r\n    return `_v(${ast.text})`\r\n  }\r\n  let code = `_c('${ast.tag}', ${ast.attrs && ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'}, ${\r\n    ast.children && ast.children.length > 0 ? genChildren(ast.children) : 'null'\r\n  })`\r\n  return code\r\n}\r\n\r\nexport function compileToFucntion(template) {\r\n  // 1. 将 template 转换成 ast 语法树\r\n  let ast = parseHTML(template)\r\n  // 2. 生成 render 方法 （render 方法的执行结果就是 虚拟 DOM）\r\n  /**\r\n   * <div id=\"app\" name=\"leo\" disable style=\"color: red; background: green\">\r\n   *   <div>ax  hello {{name}} xxx {{text}} 信息   </div>\r\n   *   <span>{{age}}</span>\r\n   *   <span>  {{xx}}  </span>\r\n   *   <span>  xxcxcx  </span>\r\n   * </div>\r\n   *\r\n   * 得到语法树 ast\r\n   *\r\n   * 把语法树 ast 变成下面的形式\r\n   *\r\n   * _c('div', {id:\"app\", name:\"leo\", disable:true, style:{\"color\":\"red\",\"background\":\"green\"}}, _c('div', null, _v(\"ax  hello \" + _s(name) + \" xxx \" + _s(text) + \" 信息   \")),_c('span', null, _v( _s(age) )),_c('span', null, _v(\"  \" + _s(xx) + \"  \")),_c('span', null, _v(\"  xxcxcx  \")))\r\n   */\r\n  let code = codegen(ast)\r\n  // with(ctx) { ...code } ctx 作为以下代码的上下文执行环境 code 中取的变量都是从 ctx 中取\r\n  code = `with(this){ return ${code}}`\r\n  let render = new Function(code)\r\n  return render\r\n}\r\n","// _c()\r\nexport function createElementVnode(vm, tag, data, ...children) {\r\n  if (data == null) {\r\n    data = {}\r\n  }\r\n  let key = data.key\r\n  delete data.key\r\n  return vnode(vm, tag, key, data, children)\r\n}\r\n\r\n// _v()\r\n\r\nexport function createTextVNode(vm, text) {\r\n  return vnode(vm, undefined, undefined, undefined, undefined, text)\r\n}\r\n\r\n// ast 是做语法转换的 将 HTML --> ast\r\n// 虚拟 DOM 是描述 DOM 的，是 DOM 的抽象\r\nfunction vnode(vm, tag, key, data, children, text) {\r\n  return {\r\n    vm,\r\n    tag,\r\n    key,\r\n    data,\r\n    children,\r\n    text\r\n  }\r\n}\r\n","import { createTextVNode, createElementVnode } from './vdom'\r\n\r\nfunction createElm(vnode) {\r\n  let { tag, data, children, text } = vnode\r\n  let elm\r\n\r\n  if (typeof tag === 'string') {\r\n    // dom 元素\r\n    elm = document.createElement(tag)\r\n\r\n    // 更新属性\r\n    patchProps(elm, data)\r\n\r\n    // 如果有儿子节点 递归生成真实 DOM\r\n    if (children && children.length > 0) {\r\n      children.forEach(child => elm.appendChild(createElm(child)))\r\n    }\r\n  } else if (typeof tag === 'undefined') {\r\n    // 文本元素\r\n    elm = document.createTextNode(text)\r\n  }\r\n\r\n  vnode.el = elm\r\n  return elm\r\n}\r\n// 跟新元素上的属性\r\nfunction patchProps(elm, data) {\r\n  if (data) {\r\n    Reflect.ownKeys(data).forEach(key => {\r\n      let value\r\n      if (key === 'style') {\r\n        // {color: red, background: blue} ==> color: red; background: blue;\r\n        value = Reflect.ownKeys(data[key]).reduce((a, c) => `${a}${c}:${data[key][c]};`, '')\r\n      } else {\r\n        value = data[key]\r\n      }\r\n      elm.setAttribute(key, value)\r\n    })\r\n  }\r\n}\r\nfunction patch(oldVnode, vnode) {\r\n  const isRealElement = oldVnode.nodeType\r\n  if (isRealElement) {\r\n    // 是真实的dom元素\r\n    const elm = oldVnode\r\n    const parentElement = elm.parentElement\r\n\r\n    // 根据 vnode 创建真实 DOM\r\n    let newElm = createElm(vnode)\r\n    // 在老节点之后插入 根据 vnode 生成的真实 DOM，然后再把老节点删除\r\n    parentElement.insertBefore(newElm, oldVnode)\r\n    parentElement.removeChild(oldVnode)\r\n\r\n    return newElm\r\n  } else {\r\n    // 是之前的老的虚拟 dom，需要更新 涉及到核心\r\n    // TODO diff 算法\r\n  }\r\n}\r\n\r\nexport default function initLifecycle(Vue) {\r\n  Vue.prototype._update = function (vnode) {\r\n    // return\r\n    // 将 vnode 转换成真实的 DOM\r\n    const vm = this\r\n    const el = vm.$el\r\n\r\n    // patch 既有初始化的功能也有更新的功能\r\n    vm.$el = patch(el, vnode)\r\n  }\r\n\r\n  // _c('div', {}, ....)\r\n  Vue.prototype._c = function () {\r\n    return createElementVnode(this, ...arguments)\r\n  }\r\n\r\n  // _v('text')\r\n  Vue.prototype._v = function () {\r\n    return createTextVNode(this, ...arguments)\r\n  }\r\n  Vue.prototype._s = function (value) {\r\n    if (typeof value !== 'object') return value\r\n    return JSON.stringify(value)\r\n  }\r\n\r\n  // _s(dataProp)\r\n  Vue.prototype._render = function () {\r\n    // 当执行的时候去 vue 的实例上取值，这样视图和属性就绑在一起了\r\n    return this.$options.render.call(this)\r\n  }\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n  vm.$el = el\r\n  // 调用render方法产生虚拟节点 虚拟 DOM\r\n  vm._update(vm._render()) // vm._render ===> vm.$options.render\r\n  // 根据虚拟DOM 产生真实 DOM\r\n  // 插入到 el 中\r\n}\r\n","import { initState } from './state'\r\nimport { compileToFucntion } from './compiler'\r\nimport { mountComponent } from './lifecycle'\r\n\r\nfunction initMixin(Vue) {\r\n  // 用于初始化操作\r\n  Vue.prototype._init = function (options) {\r\n    const vm = this\r\n    // vue 实例的方法或属性前面有 $\r\n    // 代表用户传过来的配置选项，把它放在全局上，\r\n    // 这样其他实例方法都能访问\r\n    this.$options = options\r\n\r\n    // 初始化状态\r\n    initState(vm)\r\n\r\n    // 模板解析\r\n    if (options.el) {\r\n      vm.$mount(options.el)\r\n    }\r\n  }\r\n\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this\r\n    el = document.querySelector(el)\r\n    let opts = vm.$options\r\n    // 如果没有 render 函数\r\n    if (!opts.render) {\r\n      let template\r\n      if (!opts.template && el) {\r\n        // 如果没有 template 属性 但是有 el 属性，就应该用 el 的区域作为模板\r\n        template = el.outerHTML\r\n      } else {\r\n        if (el) {\r\n          // 如果有 el 和 template ，那么tempalte 为模板 el 为挂载的容器元素\r\n          template = opts.template\r\n        }\r\n      }\r\n      // 写了 template 就用写了 tempalte\r\n      if (template) {\r\n        // 对模板进行编译\r\n        const render = compileToFucntion(template)\r\n        opts.render = render\r\n      }\r\n    }\r\n\r\n    // 组建的挂载\r\n    mountComponent(vm, el)\r\n  }\r\n}\r\n\r\nexport default initMixin\r\n","import initMixin from './init'\r\nimport initLifecycle from './lifecycle'\r\nfunction Vue(options) {\r\n  // debugger\r\n  this._init(options)\r\n}\r\ninitMixin(Vue) // 扩展了 init 方法\r\ninitLifecycle(Vue)\r\nexport default Vue\r\n"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","m","args","result","apply","insertedArr","ob","__ob__","slice","observeArray","console","log","Observer","data","defineProperty","enumerable","value","isArray","setPrototypeOf","walk","keys","key","defineReactive","item","observe","target","get","set","newVal","initState","vm","opts","$options","initData","call","_data","proxy","from","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","textEnd","indexOf","startTagMatch","parseStartTag","start","tagName","attrs","endTagMatch","match","advance","length","end","text","substring","chars","attr","push","name","n","createASTElement","tag","type","children","parent","node","trim","pop","genProps","str","i","undefined","obj","split","JSON","stringify","genChildren","reduce","a","c","codegen","ast","replaceAll","startsWith","endsWith","code","compileToFucntion","template","render","Function","createElementVnode","vnode","createTextVNode","createElm","elm","document","createElement","patchProps","child","appendChild","createTextNode","el","Reflect","ownKeys","setAttribute","patch","oldVnode","isRealElement","nodeType","parentElement","newElm","insertBefore","removeChild","initLifecycle","Vue","_update","$el","_c","arguments","_v","_s","_render","mountComponent","initMixin","_init","options","$mount","querySelector","outerHTML"],"mappings":"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"}